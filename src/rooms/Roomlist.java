/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rooms;

import java.awt.Component;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import service.*;
import user.customerPage;
/**
 *
 * @author jiaya
 */
public class Roomlist extends javax.swing.JFrame {
    /**
     * Creates new form
     */
 
    public Roomlist() {
        initComponents();
        setSize(1200, 550);
        setLocation(50, 100);
        setResizable(false);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int choose = JOptionPane.showConfirmDialog(null,
                        "Do you really want to exit the application?",
                        "Confirm Close", JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);
                if (choose == JOptionPane.YES_OPTION) {
                    e.getWindow().dispose();
                }
            }
        });
        jLabel1.setText(customerPage.jLabel4.getText());
        jLabel1.setVisible(false);
        showRoomAvailableinTable(query);
        
 
    }
    String query ="""
                  SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
                      FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype""";

    public void showRoomAvailableinTable(String Orderquery) {
        lists ls=new lists();
        ArrayList<RoomAvailable>rooms=ls.BindTable(Orderquery);
        String[] columnName = {"roomid","roomtype","NoOfGuest","NoOfBed","Description","Price","Image","Rating","Review"};
        Object[] []row=new Object[rooms.size()][9];
        for(int i =0;i<rooms.size();i++){
            row[i][0]=rooms.get(i).getRoomID();
            row[i][1]=rooms.get(i).getRoomType();
            row[i][2]=(rooms.get(i).getGuestAdult()+rooms.get(i).getGuestKid());
            row[i][3]=(rooms.get(i).getNoOfBed1()+rooms.get(i).getNoOfBed2());
            row[i][4]=rooms.get(i).getDescription();
            row[i][5]=rooms.get(i).getPrice();
            if(rooms.get(i).getImage() != null){               
                ImageIcon image = new ImageIcon(new ImageIcon(rooms.get(i).getImage()).getImage()
             .getScaledInstance(150, 120, Image.SCALE_SMOOTH) );   
                row[i][6]=image;
            }
            else{
                row[i][6] = null;
            }
            row[i][7]=rooms.get(i).getRating();
            row[i][8]=rooms.get(i).getReview();
        }
        TheModel model = new TheModel(row,columnName);
        jTable1.setModel(model);
        jTable1.setRowHeight(120);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(150);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 121, 1165, 336);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by", "price", "rating", "Amount of guest", "Amount of bed", " ", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(1030, 16, 145, 21);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Ascending");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1055, 42, 120, 23);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Descending");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(1055, 75, 120, 23);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Book Now");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(1061, 463, 103, 23);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Back ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(915, 463, 98, 23);

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 467, 34, 14);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Double2.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-20, -10, 1260, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String selected=(String) jComboBox1.getSelectedItem();
        if(selected.equals("Sort by")){
         JOptionPane.showMessageDialog(null, "Select your category");
        }else if(selected.equals("Amount of guest")){
        query ="""
        SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
        FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype ORDER By (IFNULL(guestAdult,0)+IFNULL(guestKid,0)) ASC""";
        showRoomAvailableinTable(query);  
        }else if(selected.equals("Amount of bed")){
        query ="""
        SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
        FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype ORDER By (IFNULL(noOfBed1,0)+IFNULL(noOfBed2,0)) ASC""";
        showRoomAvailableinTable(query);
        }        
        else{
        query ="""
        SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
        FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype ORDER By"""+" "+selected+" "+"ASC";
        showRoomAvailableinTable(query);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String selected=(String) jComboBox1.getSelectedItem();
        if(selected.equals("Sort by")){
            JOptionPane.showMessageDialog(null, "Select your category");
        }else if(selected.equals("Amount of guest")){
        query ="""
        SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
        FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype ORDER By (IFNULL(guestAdult,0)+IFNULL(guestKid,0)) DESC""";
        showRoomAvailableinTable(query);  
        }else if(selected.equals("Amount of bed")){
        query ="""
        SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
        FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype ORDER By (IFNULL(noOfBed1,0)+IFNULL(noOfBed2,0)) DESC""";   
        showRoomAvailableinTable(query);
        }        
        else{
        query ="""
        SELECT room.roomid,room.roomtype,roomtypes.guestAdult,roomtypes.guestKid,roomtypes.noOfBed1,roomtypes.noOfBed2,room.description,room.price,room.image,room.rating,room.review
        FROM room INNER JOIN roomtypes ON room.roomtype = roomtypes.roomtype ORDER By"""+" "+selected+" "+"DESC";
        showRoomAvailableinTable(query);
        }       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new SearchRoomCondition().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new customerPage().setVisible(true);
        customerPage.jLabel4.setText(jLabel1.getText());
        customerPage.jLabel4.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Roomlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Roomlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Roomlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Roomlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Roomlist().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Roomlist.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
